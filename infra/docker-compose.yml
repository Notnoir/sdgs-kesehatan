version: "3.8"
services:
  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: sdgs_db
      MYSQL_USER: sdgs_user
      MYSQL_PASSWORD: sdgs_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    working_dir: /app
    environment:
      PORT: 4000
      DB_HOST: mysql
      DB_USER: sdgs_user
      DB_PASS: sdgs_pass
      DB_NAME: sdgs_db
      S3_ENDPOINT: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      S3_BUCKET: app-bucket
      AWS_REGION: us-east-1
    ports:
      - "4000:4000"
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio-setup:
    image: minio/mc:latest
    volumes:
      - ./setup-minio.sh:/setup-minio.sh
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: ["/bin/sh", "/setup-minio.sh"]
    restart: "no"

volumes:
  mysql_data:
  minio_data:
